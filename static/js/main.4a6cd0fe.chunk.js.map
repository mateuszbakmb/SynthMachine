{"version":3,"sources":["components/Button.jsx","components/Volume.jsx","components/Machine.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Button","handleClick","_this","props","power","audio","volume","play","currentTime","idDisplay","id","_this2","this","react_default","a","createElement","Fragment","className","onClick","letter","ref","src","Component","Volume","volumeDown","togglePower","volumeUp","React","Machine","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleidDisplay","setState","e","state","document","querySelectorAll","forEach","x","classList","toggle","querySelector","hello","active","pause","handleKeyDown","key","String","fromCharCode","keyCode","chosen","getElementById","click","addEventListener","removeEventListener","style","display","width","concat","components_Volume","data","map","elem","components_Button","url","App","components_Machine","Boolean","window","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a6cd0fe.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Button extends Component{\r\n\r\n  handleClick =()=>{\r\n    if(this.props.power){\r\n    this.audio.volume=this.props.volume/100;\r\n    this.audio.play();\r\n    this.audio.currentTime = 0;\r\n    this.props.idDisplay(this.props.id);}\r\n  }\r\n\r\n  render () {\r\n    return(\r\n    <React.Fragment>\r\n      <div className=\"button unlightened\" onClick={this.handleClick} id={this.props.letter}>\r\n        <p>{this.props.letter}</p>\r\n      <audio ref={ref=>this.audio=ref} src={this.props.src} id={this.props.id}></audio>\r\n      </div>\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\nclass Volume extends React.Component {\r\n\r\n  render () {\r\nreturn (\r\n  <div id='midPanel'>\r\n    <button className='volButton unlightened' onClick={this.props.volumeDown}>-</button>\r\n    <button id='powButton' onClick={this.props.togglePower}><i className=\"fas fa-power-off\"></i></button>\r\n    <button className='volButton unlightened' onClick={this.props.volumeUp}>+</button>\r\n  </div>\r\n)\r\n  }\r\n}\r\n\r\nexport default Volume;\r\n","import React, {Component} from 'react'\r\nimport Button from './Button.jsx';\r\nimport Volume from './Volume.jsx'\r\n\r\nclass Machine extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      idDisplay: '',\r\n      volume: 50,\r\n      power: false,\r\n      active: 'unlightened'\r\n    }\r\n  }\r\n\r\n  handleidDisplay = (idDisplay)=>{\r\n    this.setState({idDisplay})\r\n  }\r\n\r\n  volumeUp =(e) =>{\r\n    if(this.state.power){\r\n    if(this.state.volume<100){\r\n    this.setState({volume: this.state.volume+1})\r\n  }}\r\n  }\r\n\r\n  volumeDown=()=>{\r\n    if(this.state.power){\r\n    if(this.state.volume>0){\r\n    this.setState({volume: this.state.volume-1})\r\n  }}\r\n  }\r\n\r\n  togglePower = () =>{\r\n    document.querySelectorAll('.unlightened').forEach(x=>x.classList.toggle('lightened'))\r\n    document.querySelector('#powButton').classList.toggle('turnedOn')\r\n    const hello = this.state.idDisplay ? '' : 'HELLO';\r\n    this.setState({idDisplay:hello, power: !this.state.power})\r\n    this.state.active=== 'lightened' ? (this.setState({active: 'unlightened'})) : (this.setState({active: 'lightened'}))\r\n    document.querySelectorAll('audio').forEach(x=>x.pause())\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleKeyDown = (e)=> {\r\n    let key = String.fromCharCode(e.keyCode);\r\n    const chosen = document.getElementById(key)\r\n    if (chosen) {\r\n    chosen.click()}\r\n  }\r\n\r\n  render () {\r\n  return (\r\n    <div id='container'>\r\n      <div id='brandName'>SynthMachine</div>\r\n      <div id='screen'>\r\n        {!this.state.power ?\r\n          <div id='idDisplay' style={{display: 'none'}}></div> :\r\n          <div id='idDisplay'>{this.state.idDisplay}</div>\r\n        }\r\n        {!this.state.power ?\r\n          <div id='volDisplay' style={{display: 'none'}}></div> :\r\n          <div id='volDisplay'>Vol: {this.state.volume}%</div>\r\n        }\r\n        {!this.state.power ?\r\n          <div id='volBar' style={{display: 'none'}}></div> :\r\n          <div id='volBar' style={{width: `${this.state.volume*2}px`}}></div>\r\n        }\r\n      </div>\r\n          <Volume\r\n            volumeDown={this.volumeDown}\r\n            volumeUp={this.volumeUp}\r\n            togglePower={this.togglePower}/>\r\n      <div id='buttonsPanel'>\r\n        {data.map(elem=>\r\n          <Button\r\n            id={elem.id}\r\n            key={elem.id}\r\n            letter={elem.key}\r\n            src={elem.url}\r\n            idDisplay={this.handleidDisplay}\r\n            volume={this.state.volume}\r\n            power={this.state.power}\r\n            />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Machine;\r\n\r\nconst data = [{\r\n    key: 'Q',\r\n    id: 'Dnb-dark',\r\n    url: 'http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Nu%20Skool%20or%20DnB-5913-Free-Loops.com.mp3'\r\n  }, {\r\n    key: 'W',\r\n    id: 'Bubbling-beat',\r\n    url: 'http://dight310.byu.edu/media/audio/FreeLoops.com/2/2/Bubbling%20Beat.wav-18870-Free-Loops.com.mp3'\r\n  }, {\r\n    key: 'E',\r\n    id: 'Distortion',\r\n    url: 'http://www.hotdogstorm.com/tempsoundsolutions/supersaw%20samples/C1%20Super%20Saw.wav'\r\n  }, {\r\n    key: 'A',\r\n    id: 'Acid-line',\r\n    url: 'http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/Acid%20Line%20Bass%20Lick-177-Free-Loops.com.mp3'\r\n  }, {\r\n    key: 'S',\r\n    id: 'Wave-1',\r\n    url: 'http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/SHOTRVSE.WAV'\r\n  }, {\r\n    key: 'D',\r\n    id: 'Phase-hit',\r\n    url: 'http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/PHASESHT.WAV'\r\n  }, {\r\n    key: 'Z',\r\n    id: \"Hi-Hat\",\r\n    url: 'http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Lil%20Jon%20Hi%20Hat-8247-Free-Loops.com.mp3'\r\n  }, {\r\n    key: 'X',\r\n    id: 'Kick',\r\n    url: 'http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/DR%20202%20Kick-7719-Free-Loops.com.mp3'\r\n  }, {\r\n    key: 'C',\r\n    id: 'Moog-Bass',\r\n    url: 'http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Moog%20Bass%20Hit%209-2787-Free-Loops.com.mp3'\r\n  },\r\n];\r\n","import React, { Component } from 'react';\nimport Machine from './Machine.jsx'\nimport './../App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Machine />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}